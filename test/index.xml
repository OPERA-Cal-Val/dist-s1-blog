<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>OPERA DIST-S1 Blog</title><link>https://opera-cal-val.github.io/dist-s1-blog/test/</link><description>Recent content on OPERA DIST-S1 Blog</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>Copyright © 2025, NASA JPL/Caltech</copyright><lastBuildDate>Wed, 22 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://opera-cal-val.github.io/dist-s1-blog/test/index.xml" rel="self" type="application/rss+xml"/><item><title>Comparing DIST-HLS and DIST-S1</title><link>https://opera-cal-val.github.io/dist-s1-blog/test/blog/dist_s1_informal_val_sites_2025/</link><pubDate>Wed, 22 Oct 2025 00:00:00 +0000</pubDate><guid>https://opera-cal-val.github.io/dist-s1-blog/test/blog/dist_s1_informal_val_sites_2025/</guid><description>&lt;p&gt;The sites have different types of disturbances and we can compare the DIST-HLS and DIS-S1 disturbances. Use the drop down menu to explore different sites.&lt;/p&gt;


 &lt;style&gt;
 #gee-app-frame {
 width: 1600px;
 height: 1200px;
 border: none;
 }
 &lt;/style&gt;
 &lt;iframe
 id="gee-app-frame"
 src="https://opera-one.projects.earthengine.app/view/dist-s1-sample-explorer"
 allowfullscreen&gt;
 &lt;/iframe&gt;</description><content:encoded><![CDATA[<p>The sites have different types of disturbances and we can compare the DIST-HLS and DIS-S1 disturbances. Use the drop down menu to explore different sites.</p>


  <style>
    #gee-app-frame {
      width: 1600px;
      height: 1200px;
      border: none;
    }
  </style>
  <iframe
        id="gee-app-frame"
        src="https://opera-one.projects.earthengine.app/view/dist-s1-sample-explorer"
        allowfullscreen>
    </iframe>

]]></content:encoded></item><item><title>The Los Angeles Fires 2025 - preliminary take</title><link>https://opera-cal-val.github.io/dist-s1-blog/test/blog/los_angeles_fires/</link><pubDate>Sun, 19 Oct 2025 00:00:00 +0000</pubDate><guid>https://opera-cal-val.github.io/dist-s1-blog/test/blog/los_angeles_fires/</guid><description>&lt;p&gt;This is our first (rough) post and shows what we can do relatively quickly with a blog and provides some loose instructions on how to create it.&lt;/p&gt;
&lt;p&gt;We are going to show the perimeters extracted from this: &lt;a href="https://data-nifc.opendata.arcgis.com/datasets/nifc::wfigs-current-interagency-fire-perimeters/about"&gt;https://data-nifc.opendata.arcgis.com/datasets/nifc::wfigs-current-interagency-fire-perimeters/about&lt;/a&gt;. To get all the relevant perimeters (Eaton, Pallisades, Kenneth, Sunset), we took +/- 20 days from January 4th, 2025 from the perimeters linked.&lt;/p&gt;
&lt;p&gt;Some notes about the product:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We are going to look at the DIST-S1 product over Los Angeles after the wildfires: &lt;code&gt;OPERA_L3_DIST-ALERT-S1_T11SLT_20250303T140056Z_20251016T224900Z_S1A_30_v0.1&lt;/code&gt;. This is generated with version &lt;code&gt;dist-s1&lt;/code&gt; v&lt;code&gt;2.0.6&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;the product we display was from a Sentinel-1 pass &lt;code&gt;20250303T140056Z&lt;/code&gt;. Interestingly, there are lot of provisional changes within Los Angeles. Looking at the time-series of products (Status layers not shown) - there are two passes of data from &lt;a href="https://search.asf.alaska.edu/#/?zoom=9.389&amp;amp;center=-117.799,33.669&amp;amp;dataset=OPERA-S1&amp;amp;productTypes=RTC&amp;amp;polygon=POLYGON%28%28-118.7185%2033.8735,-117.8756%2033.8735,-117.8756%2034.3332,-118.7185%2034.3332,-118.7185%2033.8735%29%29&amp;amp;resultsLoaded=true&amp;amp;granule=OPERA_L2_RTC-S1_T064-135520-IW2_20250214T015043Z_20250215T161954Z_S1A_30_v1.0&amp;amp;start=2025-02-13T08:00:00Z&amp;amp;end=2025-02-16T07:59:59Z"&gt;Sentinel-1&lt;/a&gt;. During that time, there was an atmospheric river: &lt;a href="https://cw3e.ucsd.edu/cw3e-event-summary-12-14-february-2025/"&gt;https://cw3e.ucsd.edu/cw3e-event-summary-12-14-february-2025/&lt;/a&gt; - that means we have two observations of this event in 1 day!&lt;/li&gt;
&lt;li&gt;We still need to provide some information on the color-coding (it&amp;rsquo;s not straightforward to do this in leaflet) - for now, we just are going to note it matches DIST-HLS&amp;rsquo;s colorbar (see &lt;a href="https://glad.earthengine.app/view/dist-alert#lon=-118.41608925455033;lat=34.13252521035229;zoom=11;"&gt;here&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Previously, we had better results over Eaton, we are looking into this.&lt;/li&gt;
&lt;li&gt;All these products are unvalidated!&lt;/li&gt;
&lt;li&gt;Last week, we found a bug in confirmation making the fire perimeters more conservative than they should be - this will be updated.&lt;/li&gt;
&lt;/ul&gt;


&lt;link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" /&gt;
&lt;script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"&gt;&lt;/script&gt;
&lt;script src="https://unpkg.com/pmtiles@3.0.7/dist/pmtiles.js"&gt;&lt;/script&gt;

&lt;div id="fire-map" style="height: 600px; width: 100%; margin: 20px 0;"&gt;&lt;/div&gt;

&lt;script&gt;
(async () =&gt; {
 // Initialize map centered on Los Angeles
 const map = L.map('fire-map').setView([34.05, -118.25], 10);

 // Add base ESRI imagery tiles
 const esriImagery = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
 attribution: 'Tiles &amp;copy; Esri &amp;mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',
 maxZoom: 19
 }).addTo(map);

 // Add OpenStreetMap as alternative basemap
 const osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
 attribution: '© OpenStreetMap contributors',
 maxZoom: 19
 });

 // Load PMTiles - construct path based on current page URL
 const pathPrefix = window.location.pathname.includes('/dist-s1-blog/') ? '/dist-s1-blog' : '';
 const pmtilesUrl = `${pathPrefix}/map_data/los_angeles/los_angeles_2025.pmtiles`;
 const p = new pmtiles.PMTiles(pmtilesUrl);

 // Debug: Check if PMTiles loads
 p.getHeader().then(h =&gt; {
 console.log('PMTiles header:', h);
 }).catch(e =&gt; {
 console.error('Error loading PMTiles:', e);
 });

 // Custom GridLayer for PMTiles raster
 const PMTilesLayer = L.GridLayer.extend({
 createTile: function(coords, done) {
 const tile = document.createElement('img');

 // Fetch tile from PMTiles
 p.getZxy(coords.z, coords.x, coords.y).then(data =&gt; {
 if (data) {
 const blob = new Blob([data.data], { type: 'image/png' });
 const url = URL.createObjectURL(blob);
 tile.src = url;

 // Clean up blob URL after image loads
 tile.onload = () =&gt; {
 URL.revokeObjectURL(url);
 done(null, tile);
 };
 tile.onerror = () =&gt; {
 done(new Error('Tile load error'), tile);
 };
 } else {
 done(new Error('No tile data'), tile);
 }
 }).catch(err =&gt; {
 console.error('Error fetching tile:', err);
 done(err, tile);
 });

 return tile;
 }
 });

 // Add PMTiles layer to map
 const pmtilesLayer = new PMTilesLayer({
 opacity: 0.8,
 attribution: 'DIST-S1',
 maxZoom: 16,
 minZoom: 0
 });

 pmtilesLayer.addTo(map);

 // Load and add GeoJSON layer
 const geojsonResponse = await fetch(`${pathPrefix}/map_data/los_angeles/los_angeles_fires.geojson`);
 const geojsonData = await geojsonResponse.json();

 const geojsonLayer = L.geoJSON(geojsonData, {
 style: {
 color: '#ff0000',
 weight: 2,
 opacity: 0.8,
 fillOpacity: 0.3
 },
 onEachFeature: function(feature, layer) {
 if (feature.properties) {
 let popupContent = '&lt;div&gt;';
 for (const [key, value] of Object.entries(feature.properties)) {
 popupContent += `&lt;strong&gt;${key}:&lt;/strong&gt; ${value}&lt;br&gt;`;
 }
 popupContent += '&lt;/div&gt;';
 layer.bindPopup(popupContent);
 }
 }
 }).addTo(map);

 // Add layer control with clickable basemaps
 const baseLayers = {
 "ESRI Imagery": esriImagery,
 "OpenStreetMap": osmLayer
 };

 const overlays = {
 "DIST-S1 Status": pmtilesLayer,
 "Fire Perimeters": geojsonLayer
 };

 L.control.layers(baseLayers, overlays).addTo(map);
})();
&lt;/script&gt;</description><content:encoded><![CDATA[<p>This is our first (rough) post and shows what we can do relatively quickly with a blog and provides some loose instructions on how to create it.</p>
<p>We are going to show the perimeters extracted from this: <a href="https://data-nifc.opendata.arcgis.com/datasets/nifc::wfigs-current-interagency-fire-perimeters/about">https://data-nifc.opendata.arcgis.com/datasets/nifc::wfigs-current-interagency-fire-perimeters/about</a>. To get all the relevant perimeters (Eaton, Pallisades, Kenneth, Sunset), we took +/- 20 days from January 4th, 2025 from the perimeters linked.</p>
<p>Some notes about the product:</p>
<ul>
<li>We are going to look at the DIST-S1 product over Los Angeles after the wildfires: <code>OPERA_L3_DIST-ALERT-S1_T11SLT_20250303T140056Z_20251016T224900Z_S1A_30_v0.1</code>. This is generated with version <code>dist-s1</code> v<code>2.0.6</code>.</li>
<li>the product we display was from a Sentinel-1 pass <code>20250303T140056Z</code>. Interestingly, there are lot of provisional changes within Los Angeles. Looking at the time-series of products (Status layers not shown) - there are two passes of data from <a href="https://search.asf.alaska.edu/#/?zoom=9.389&amp;center=-117.799,33.669&amp;dataset=OPERA-S1&amp;productTypes=RTC&amp;polygon=POLYGON%28%28-118.7185%2033.8735,-117.8756%2033.8735,-117.8756%2034.3332,-118.7185%2034.3332,-118.7185%2033.8735%29%29&amp;resultsLoaded=true&amp;granule=OPERA_L2_RTC-S1_T064-135520-IW2_20250214T015043Z_20250215T161954Z_S1A_30_v1.0&amp;start=2025-02-13T08:00:00Z&amp;end=2025-02-16T07:59:59Z">Sentinel-1</a>. During that time, there was an atmospheric river: <a href="https://cw3e.ucsd.edu/cw3e-event-summary-12-14-february-2025/">https://cw3e.ucsd.edu/cw3e-event-summary-12-14-february-2025/</a> - that means we have two observations of this event in 1 day!</li>
<li>We still need to provide some information on the color-coding (it&rsquo;s not straightforward to do this in leaflet) - for now, we just are going to note it matches DIST-HLS&rsquo;s colorbar (see <a href="https://glad.earthengine.app/view/dist-alert#lon=-118.41608925455033;lat=34.13252521035229;zoom=11;">here</a>)</li>
<li>Previously, we had better results over Eaton, we are looking into this.</li>
<li>All these products are unvalidated!</li>
<li>Last week, we found a bug in confirmation making the fire perimeters more conservative than they should be - this will be updated.</li>
</ul>


<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script src="https://unpkg.com/pmtiles@3.0.7/dist/pmtiles.js"></script>

<div id="fire-map" style="height: 600px; width: 100%; margin: 20px 0;"></div>

<script>
(async () => {
  // Initialize map centered on Los Angeles
  const map = L.map('fire-map').setView([34.05, -118.25], 10);

  // Add base ESRI imagery tiles
  const esriImagery = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {
    attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',
    maxZoom: 19
  }).addTo(map);

  // Add OpenStreetMap as alternative basemap
  const osmLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
    attribution: '© OpenStreetMap contributors',
    maxZoom: 19
  });

  // Load PMTiles - construct path based on current page URL
  const pathPrefix = window.location.pathname.includes('/dist-s1-blog/') ? '/dist-s1-blog' : '';
  const pmtilesUrl = `${pathPrefix}/map_data/los_angeles/los_angeles_2025.pmtiles`;
  const p = new pmtiles.PMTiles(pmtilesUrl);

  // Debug: Check if PMTiles loads
  p.getHeader().then(h => {
    console.log('PMTiles header:', h);
  }).catch(e => {
    console.error('Error loading PMTiles:', e);
  });

  // Custom GridLayer for PMTiles raster
  const PMTilesLayer = L.GridLayer.extend({
    createTile: function(coords, done) {
      const tile = document.createElement('img');

      // Fetch tile from PMTiles
      p.getZxy(coords.z, coords.x, coords.y).then(data => {
        if (data) {
          const blob = new Blob([data.data], { type: 'image/png' });
          const url = URL.createObjectURL(blob);
          tile.src = url;

          // Clean up blob URL after image loads
          tile.onload = () => {
            URL.revokeObjectURL(url);
            done(null, tile);
          };
          tile.onerror = () => {
            done(new Error('Tile load error'), tile);
          };
        } else {
          done(new Error('No tile data'), tile);
        }
      }).catch(err => {
        console.error('Error fetching tile:', err);
        done(err, tile);
      });

      return tile;
    }
  });

  // Add PMTiles layer to map
  const pmtilesLayer = new PMTilesLayer({
    opacity: 0.8,
    attribution: 'DIST-S1',
    maxZoom: 16,
    minZoom: 0
  });

  pmtilesLayer.addTo(map);

  // Load and add GeoJSON layer
  const geojsonResponse = await fetch(`${pathPrefix}/map_data/los_angeles/los_angeles_fires.geojson`);
  const geojsonData = await geojsonResponse.json();

  const geojsonLayer = L.geoJSON(geojsonData, {
    style: {
      color: '#ff0000',
      weight: 2,
      opacity: 0.8,
      fillOpacity: 0.3
    },
    onEachFeature: function(feature, layer) {
      if (feature.properties) {
        let popupContent = '<div>';
        for (const [key, value] of Object.entries(feature.properties)) {
          popupContent += `<strong>${key}:</strong> ${value}<br>`;
        }
        popupContent += '</div>';
        layer.bindPopup(popupContent);
      }
    }
  }).addTo(map);

  // Add layer control with clickable basemaps
  const baseLayers = {
    "ESRI Imagery": esriImagery,
    "OpenStreetMap": osmLayer
  };

  const overlays = {
    "DIST-S1 Status": pmtilesLayer,
    "Fire Perimeters": geojsonLayer
  };

  L.control.layers(baseLayers, overlays).addTo(map);
})();
</script>

]]></content:encoded></item></channel></rss>